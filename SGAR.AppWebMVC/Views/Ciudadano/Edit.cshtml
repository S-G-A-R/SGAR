@model SGAR.AppWebMVC.Models.Ciudadano

@{
    ViewData["Title"] = "Edit";
}


<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row mb-3">
                <div class="form-group col-4">
                    <label asp-for="Nombre" class="control-label"></label>
                    <input asp-for="Nombre" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>
                <div class="form-group col-4">
                    <label asp-for="Apellido" class="control-label"></label>
                    <input asp-for="Apellido" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Apellido" class="text-danger"></span>
                </div>

                <div class="form-group col-4">
                    <label asp-for="Correo" class="control-label"></label>
                    <input asp-for="Correo" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Correo" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-3">
                    <label class="control-label">Departamento</label>
                    <select id="departamentoId" class="form-control combo" asp-items="ViewBag.DepartamentoId"></select>
                </div>


                <div class="form-group col-3">
                    <label class="control-label">Municipio</label>
                    <select id="municipioId" class="form-control combo" asp-items="ViewBag.MunicipioId"></select>
                </div>


                <div class="form-group col-3">
                    <label class="control-label">Distrito</label>
                    <select id="distritos" class="form-control combo" asp-items="ViewBag.DistritoId"></select>
                </div>

                <div class="form-group col-3">
                    <label asp-for="ZonaId" class="control-label"></label>
                    <select id="zonas" asp-for="ZonaId" class="form-control combo" asp-items="ViewBag.ZonaId"></select>
                </div>
            </div>

            <div class="d-flex justify-content-center">

                <div class="form-group w-25 d-flex justify-content-center">
                    <input type="submit" value="Guardar" class="btn btn-success w-50" />
                </div>
                <div class="w-25 d-flex justify-content-center">
                    <a asp-action="Perfil" asp-route-id="@Model?.Id" class="btn btn-info w-50 "><i class="bi bi-arrow-90deg-left"></i> Volver</a>
                </div>

            </div>

        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    // Esta línea agrega un event listener al elemento HTML con el id "departamentoId".
    // El evento "change" se dispara cuando el valor del elemento cambia (por ejemplo, cuando se selecciona una opción diferente en un dropdown).
    $("#departamentoId").change(function () {
        // Cuando el evento "change" se dispara, se llama a la función getMunicipiosFromDepartamentoId().
        getMunicipiosFromDepartamentoId();
    })

    // Similar a lo anterior, esta línea agrega un event listener al elemento HTML con el id "municipioId".
    $("#municipioId").change(function () {
        // Cuando el evento "change" se dispara, se llama a la función getDistritosFromMunicipioId().
        getDistritosFromMunicipioId();
    })

    // Similar a lo anterior, esta línea agrega un event listener al elemento HTML con el id "distritos".
    $("#distritos").change(function () {
        // Cuando el evento "change" se dispara, se llama a la función getZonasFromDistritoId().
        getZonasFromDistritoId();
    })

    // Definición de la función getMunicipiosFromDepartamentoId().
    var getMunicipiosFromDepartamentoId = function () {
        // Utiliza la función $.ajax() de jQuery para realizar una solicitud HTTP asíncrona.
        $.ajax({
            // Especifica la URL a la que se enviará la solicitud. Url.Action() es una función de Razor que genera la URL para la acción GetMunicipiosFromDepartamentoId del controlador Ciudadano.
            url: '@Url.Action("GetMunicipiosFromDepartamentoId", "Ciudadano")',
            // Especifica el método HTTP utilizado para la solicitud (GET en este caso).
            type: 'GET',
            // Envía el valor seleccionado del elemento HTML con el id "departamentoId" como parámetro "departamentoId" en la solicitud.
            data: {
                departamentoId: $('#departamentoId').val(),
            },
            // Esta función se ejecuta si la solicitud HTTP se completa con éxito.
            success: function (data) {
                // Elimina todas las opciones existentes del elemento HTML con el id "municipioId".
                $('#municipioId').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "municipioId".
                $('#municipioId').append('<option value="0">SELECCIONAR</option>')
                // Elimina todas las opciones existentes del elemento HTML con el id "distritos".
                $('#distritos').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "distritos".
                $('#distritos').append('<option value="0">SELECCIONAR</option>')
                // Elimina todas las opciones existentes del elemento HTML con el id "zonas".
                $('#zonas').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "zonas".
                $('#zonas').append('<option value="0">SELECCIONAR</option>')
                // Itera a través de los elementos de la respuesta JSON (data).
                $(data).each(
                    // Para cada elemento, agrega una nueva opción al elemento HTML con el id "municipioId".
                    function (i, item) {
                        $('#municipioId').append('<option value="' + item.id + '">' + item.nombre + '</option>')
                    }
                )
            }
        })
    }

    // Definición de la función getDistritosFromMunicipioId().
    var getDistritosFromMunicipioId = function () {
        // Utiliza la función $.ajax() de jQuery para realizar una solicitud HTTP asíncrona.
        $.ajax({
            // Especifica la URL a la que se enviará la solicitud. Url.Action() es una función de Razor que genera la URL para la acción GetDistritosFromMunicipioId del controlador Ciudadano.
            url: '@Url.Action("GetDistritosFromMunicipioId", "Ciudadano")',
            // Especifica el método HTTP utilizado para la solicitud (GET en este caso).
            type: 'GET',
            // Envía el valor seleccionado del elemento HTML con el id "municipioId" como parámetro "municipioId" en la solicitud.
            data: {
                municipioId: $('#municipioId').val(),

            },
            // Esta función se ejecuta si la solicitud HTTP se completa con éxito.
            success: function (data) {
                // Elimina todas las opciones existentes del elemento HTML con el id "distritos".
                $('#distritos').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "distritos".
                $('#distritos').append('<option value="0">SELECCIONAR</option>')
                // Elimina todas las opciones existentes del elemento HTML con el id "zonas".
                $('#zonas').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "zonas".
                $('#zonas').append('<option value="0">SELECCIONAR</option>')
                // Itera a través de los elementos de la respuesta JSON (data).
                $(data).each(
                    // Para cada elemento, agrega una nueva opción al elemento HTML con el id "distritos".
                    function (i, item) {
                        $('#distritos').append('<option value="' + item.id + '">' + item.nombre + '</option>')
                    }
                )
            }
        })
    }

    // Definición de la función getZonasFromDistritoId().
    var getZonasFromDistritoId = function () {
        // Utiliza la función $.ajax() de jQuery para realizar una solicitud HTTP asíncrona.
        $.ajax({
            // Especifica la URL a la que se enviará la solicitud. Url.Action() es una función de Razor que genera la URL para la acción GetZonasFromDistritoId del controlador Ciudadano.
            url: '@Url.Action("GetZonasFromDistritoId", "Ciudadano")',
            // Especifica el método HTTP utilizado para la solicitud (GET en este caso).
            type: 'GET',
            // Envía el valor seleccionado del elemento HTML con el id "distritos" como parámetro "distritoId" en la solicitud.
            data: {
                distritoId: $('#distritos').val(),
            },
            // Esta función se ejecuta si la solicitud HTTP se completa con éxito.
            success: function (data) {
                // Elimina todas las opciones existentes del elemento HTML con el id "zonas".
                $('#zonas').find('option').remove()
                // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "zonas".
                $('#zonas').append('<option value="0">SELECCIONAR</option>')
                // Itera a través de los elementos de la respuesta JSON (data).
                $(data).each(
                    // Para cada elemento, agrega una nueva opción al elemento HTML con el id "zonas".
                    function (i, item) { 
                        $('#zonas').append('<option value="' + item.id + '">' + item.nombre + '</option>')
                    }
                )
            }
        })
    }
</script>
}
