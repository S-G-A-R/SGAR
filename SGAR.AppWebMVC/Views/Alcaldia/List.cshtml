@model IEnumerable<SGAR.AppWebMVC.Models.Alcaldia>

@{
    ViewData["Title"] = "Lista de alcaldias";
}

<h1><i class="bi bi-card-list me-3"></i>@ViewData["Title"]</h1>

<form asp-action="List" class="mb-3">

    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label class="control-label">Departamento</label>
                <select id="departamentoId" class="form-control" asp-items="ViewBag.DepartamentoId"></select>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label class="control-label">Municipio</label>
                <select id="municipios" name="idMunicipio" class="form-control" asp-items="ViewBag.MunicipioId"></select>
            </div>
        </div>

        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label class="control-label">Cant. Registros</label>
                    <select name="topRegistry" class="form-control">
                        <option selected value="10">10</option>
                        <option value="20">20</option>
                        <option value="60">60</option>
                        <option value="100">100</option>
                        <option value="500">500</option>
                        <option value="1000">1000</option>
                        <option value="0">Todos</option>
                    </select>
                </div>
            </div>

        </div>

    </div>
    <div class="row mt-3">
        <div class="col-12">
            <input type="submit" value="Buscar" class="btn btn-primary" />
            <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-circle-fill"></i></a>
        </div>
    </div>
</form>
<div class="row">
    <div class="col-10 mx-auto">
        <table class="table table-striped mt-4 shadow" id="myTable">
            <thead class="table-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Correo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IdMunicipioNavigation)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Correo)
                        </td>
                        <td>
                            @{
                                var municipios = ((SelectList)ViewBag.AlcaldiaId);
                                var municipio = municipios.FirstOrDefault(s => s.Value == item.IdMunicipio.ToString());
                                @municipio.Text
                            }
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning"><i class="bi bi-pencil-square"></i></a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info"><i class="bi bi-info-square-fill"></i></a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    <script>
        // Esta línea asegura que el código dentro de la función se ejecute solo después de que el documento HTML esté completamente cargado.
        // $(document).ready() es una función de jQuery que se utiliza para este propósito.
        $(document).ready(function () {
            
            // Esta línea inicializa la librería DataTables en la tabla HTML con el id "myTable".
            // DataTables es un plugin de jQuery que agrega funcionalidades avanzadas a las tablas HTML, como paginación, filtrado, ordenamiento, etc.
            $('#myTable').DataTable({

                // Esta línea configura el idioma de DataTables utilizando la variable "languageTable".
                // "language" es una opción de DataTables que permite personalizar los textos mostrados en la tabla (por ejemplo, "Mostrar _MENU_ registros", "Buscar", etc.).
                // Se asume que la variable "languageTable" es un objeto JavaScript que contiene las traducciones necesarias para el idioma deseado.
                "language": languageTable,
                ordering: false
            });
        });
        // Este código utiliza jQuery para seleccionar el elemento HTML con el id "departamentoId".
        // .change(function () { ... }); adjunta un manejador de eventos a este elemento.
        // El manejador de eventos se ejecuta cada vez que el valor del elemento "departamentoId" cambia.
        $("#departamentoId").change(function () {
             // Llama a la función getMunicipiosFromDepartamentoId cada vez que el valor del elemento "departamentoId" cambia.
             getMunicipiosFromDepartamentoId();

         });
         // Define una función llamada getMunicipiosFromDepartamentoId. Esta función se encarga de obtener los municipios correspondientes al departamento seleccionado.
         var getMunicipiosFromDepartamentoId = function () {
             // Utiliza la función $.ajax de jQuery para realizar una solicitud AJAX al servidor.
             $.ajax({
                 // Url.Action("GetMunicipiosFromDepartamentoId", "Zona") es una sintaxis de Razor (ASP.NET MVC) que genera la URL correcta para la acción GetMunicipiosFromDepartamentoId en el controlador Zona.
                 // Esto asegura que la URL sea correcta incluso si la aplicación se implementa en un subdirectorio.
                 // Esta URL es el punto final al que se enviará la solicitud AJAX.
                 url: '@Url.Action("GetMunicipiosFromDepartamentoId", "Zona")',

                 // Especifica que la solicitud HTTP es de tipo GET. Esto significa que los datos se enviarán como parámetros en la URL.
                 type: 'GET',

                 // data es un objeto que contiene los datos que se enviarán al servidor.
                 data: {
                     // departamentoId: $('#departamentoId').val() obtiene el valor seleccionado del elemento HTML con el id "departamentoId" y lo envía como un parámetro llamado "departamentoId".
                     departamentoId: $('#departamentoId').val(),
                 },
                 // success es una función de devolución de llamada que se ejecuta si la solicitud AJAX es exitosa.
                 // El parámetro data contiene los datos devueltos por el servidor (en este caso, una lista de municipios en formato JSON).
                 success: function (data) {
                     // Elimina todas las opciones (elementos <option>) actuales del elemento HTML con el id "municipios".
                     // Esto limpia el control desplegable de municipios antes de agregar las nuevas opciones.
                     $('#municipios').find('option').remove();
                     // Agrega una opción predeterminada "SELECCIONAR" al elemento HTML con el id "municipios".
                     // Esto asegura que el usuario tenga una opción predeterminada para seleccionar.
                     $('#municipios').append('<option value="0">SELECCIONAR</option>');
                     // Itera a través de los datos recibidos (la lista de municipios) utilizando la función each de jQuery.
                     $(data).each(
                         // Función que se ejecuta para cada elemento en la lista.
                         // i es el índice del elemento actual en la lista.
                         // item es el objeto municipio actual.
                         function (i, item) {
                             // Agrega una nueva opción al elemento HTML con el id "municipios" para cada municipio en la lista.
                             // El valor de la opción (value) es el id del municipio.
                             // El texto de la opción es el nombre del municipio.
                             $('#municipios').append('<option value="' + item.id + '">' + item.nombre + '</option>');
                         }
                     );
                 }
             });
         };


    </script>
}
